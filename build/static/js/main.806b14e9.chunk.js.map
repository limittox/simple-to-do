{"version":3,"sources":["components/Title/Title.js","services/taskService.js","components/Textbox/Textbox.js","components/Tasks/Tasks.js","App.js","index.js"],"names":["Title","title","className","axios","get","newObject","post","id","put","delete","Textbox","tasks","setTasks","useState","task","setTask","onSubmit","event","preventDefault","length","TaskService","taskName","done","then","response","concat","data","alert","value","onChange","target","type","Task","onClick","updatedTask","returnedTask","console","log","map","currTask","filter","Tasks","completed","undefined","tasksDisplay","key","taskEmptyMessage","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.806b14e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './title.css';\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <>\r\n      <p className=\"title\">{title}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Title;","import axios from 'axios';\r\nconst baseUrl = '/api/tasks'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteTask = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deleteTask }","import React, { useState } from 'react';\r\nimport TaskService from '../../services/taskService'\r\n\r\nconst Textbox = ({ tasks, setTasks }) => {\r\n  const [ task, setTask ] = useState('')\r\n  const addTask = (event) => {\r\n    event.preventDefault()\r\n    // If task is empty then prompt user\r\n    if (task.length === 0) {\r\n      alert('Please enter something...')\r\n      return\r\n    }\r\n\r\n    // New task\r\n    const newTask = {\r\n      taskName: task,\r\n      done: false\r\n    }\r\n\r\n    // Adding new task to server\r\n    TaskService\r\n      .create(newTask)\r\n      .then(response => {\r\n        setTasks(tasks.concat(response.data))\r\n      })\r\n\r\n    // Resetting textbox to blank\r\n    setTask('')\r\n  }\r\n\r\n  const handleTaskChange = (event) => {\r\n    setTask(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addTask}>\r\n        <input value={task} onChange={handleTaskChange} />\r\n        <button type=\"submit\">Add...</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Textbox;","import React from 'react';\r\nimport './tasks.css'\r\nimport TaskService from '../../services/taskService'\r\n\r\n\r\nconst Task = ({ task, tasks, setTasks }) => {\r\n  const handleTaskButton = () => {\r\n    const updatedTask = {\r\n      ...task,\r\n      done: !task.done\r\n    }\r\n\r\n    TaskService\r\n      .update(task.id, updatedTask)\r\n      .then(returnedTask => {\r\n        console.log(returnedTask)\r\n        setTasks(tasks.map(currTask => currTask.id === task.id ? returnedTask.data : currTask))\r\n      })\r\n  }\r\n\r\n  const handleTaskDeleteButton = () => {\r\n    TaskService\r\n      .deleteTask(task.id)\r\n    \r\n    setTasks(tasks.filter(currTask => currTask.id !== task.id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        <button className=\"taskButton\" onClick={handleTaskButton}>{task.done ? '✅' : '⬜'}</button>\r\n        {\r\n          task.done ? <del>{task.taskName}</del> : `${task.taskName}`\r\n        }\r\n        <button className=\"taskButton\" onClick={handleTaskDeleteButton}>❌</button>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Tasks = ({ tasks, setTasks, completed }) => {\r\n  if (completed === undefined)\r\n    completed = false\r\n  \r\n  const tasksDisplay = tasks.filter(task => completed === task.done)\r\n                        .map(task => {\r\n                          return <Task key={task.id} task={task} tasks={tasks} setTasks={setTasks} />\r\n                        })\r\n\r\n  let taskEmptyMessage = ''\r\n\r\n  if (tasks.length === 0) {\r\n    taskEmptyMessage = <p className=\"taskSubText\"><span>Add some tasks to be productive!</span></p>\r\n  } else if (tasks[0].done) {\r\n    taskEmptyMessage = <p className=\"taskSubText\">👍 <span> Nice job. You're done for the day</span></p>\r\n  } else {\r\n    taskEmptyMessage = <p className=\"taskSubText\">😭 <span> No tasks completed</span></p>\r\n  }\r\n  return (\r\n    <div className=\"tasks\">\r\n      { tasksDisplay.length > 0 ? tasksDisplay : taskEmptyMessage}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Tasks;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Title, Textbox, Tasks } from './components';\nimport './App.css';\nimport TaskService from './services/taskService';\n\n\nconst App = () => {\n  const [ tasks, setTasks ] = useState([])\n  useEffect(() => {\n    TaskService\n      .getAll()\n      .then(response => {\n        setTasks(response.data)\n      })\n  }, [])\n\n  return (\n    <>\n      <Title title=\"Type your tasks below...\" />\n      <Textbox tasks={tasks} setTasks={setTasks} />\n\n      <Title title=\"TASKS\" />\n      <Tasks tasks={tasks} setTasks={setTasks} />\n\n      <Title title=\"Completed Tasks\" />\n      <Tasks tasks={tasks} completed={true} setTasks={setTasks} />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}